What is __name__?
“A __name__ is a built-in variable that returns us the name of the module being used.”

In simple words, by using __name__, we can check whether our module is being imported or run directly.

If we run it in the same module that it is created in, then it will print “main” onto the screen;
otherwise, if it is being used elsewhere, then it will print the name of its module or file it is created in.

The main is a point of the program from where the program starts its execution. 
Every program has its own main function. 
The main function can only be executed when it is being run in the same program. 
If the file is being imported, then it is no longer the main function because the file that is importing it has its own “main” function.

The syntax is :
if__name__=="__main__":


Modules in Python has a special attribute called __name__. 
The value of the __name__ attribute is set to __main__ when the module is run as the main program. 
Otherwise, the value of __name__ is set to the name of the module. 
The if __name__ == “__main__” block prevents the certain code from being run when the module is imported.

====================================================================================================================
def printhar(string):
    return f"Ye string harry ko de de thakur {string}"

def add(num1, num2):
    return num1 + num2 + 5


print("aand the name is", __name__)

if __name__ == '__main__':
    print(printhar("Harry1"))
    o = add(4, 6)
    print(o)
  


