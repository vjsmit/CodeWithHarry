What is Scope in Python?
Scope refers to the coding area where a particular Python variable is accessible. Hence one cannot access any particular variable from anywhere from the code.

Local Variable:-
A variable that is declared inside a function or loop is called a local variable. 
In the case of functions, when we define a variable within a function, its scope lies within the function only.
It is accessible from the point where it is defined until the end of the function. It will exist for as long as the function is executing. 
Local variables cannot be accessed outside the function. The parameter names in the function, they behave like a local variable.

Global Variable:-
On the other hand, a global variable is easier to understand; it is not declared inside the function and can be accessed anywhere within a program.
It can also be defined as a variable defined in the main body of the program. Any function or loop can access it. Its scope is anywhere within the program.

To modify the global variable inside the function:

the global keyword allows us to modify the global variable. It is used to create a global variable and make changes to the variable in a local scope.

Rules of global keyword:
If we assigned a value to a variable within the function body, it would be local unless explicitly declared as global.
Those variables that are referenced only inside a function are implicitly global.
There is no need to use the global keyword outside a function.

Nested Fn.
A nested function also has its own workspace. But it can be accessed to the workspaces of all functions in which it is nested.
A variable whose value is assigned by the primary function can be read or overwritten by a function nested at any level within the primary.
